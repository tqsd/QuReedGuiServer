syntax = "proto3";
import "google/protobuf/struct.proto";

package qureed_project_server;

service ServerManagement {
  // Server Status
  rpc Status (StatusRequest) returns (StatusResponse);

  // Server Terminate
  rpc Terminate (TerminateRequest) returns (TerminateResponse);
}

service VenvManagement {
  rpc Connect (VenvConnectRequest) returns (VenvConnectResponse);
  // Freeze
  rpc Freeze (FreezeRequest) returns (FreezeResponse);

  // Install
  rpc Install (InstallRequest) returns (InstallResponse);

  // Uninstall
  rpc Uninstall (UninstallRequest) returns (UninstallResponse);
}

service QuReedManagement {

  // Get a list of all available icons
  rpc GetIcons (GetIconsRequest) returns (GetIconsResponse);

  // Get a single icon
  rpc GetIcon (GetIconRequest) returns (GetIconResponse);

  // Get a list of all implemented devices
  rpc GetDevices (GetDevicesRequest) returns (GetDevicesResponse);

  // Get a single Device (built-in or custom)
  rpc GetDevice (GetDeviceRequest) returns (GetDeviceResponse);

  // Get all signals
  rpc GetSignals (GetSignalsRequest) returns (GetSignalsResponse);

  // Request Opening a board
  rpc OpenBoard (OpenBoardRequest) returns (OpenBoardResponse);

  // Request the board to be saved
  rpc SaveBoard (SaveBoardRequest) returns (SaveBoardResponse);

  // Add Device to the currently opened board
  rpc AddDevice (AddDeviceRequest) returns (AddDeviceResponse);

  // Remove Device from the currently opened board
  rpc RemoveDevice (RemoveDeviceRequest) returns (RemoveDeviceResponse);

  // Create Connection between two devices
  rpc ConnectDevices (ConnectDevicesRequest) returns (ConnectDevicesResponse);

  // Disconnects the devices
  rpc DisconnectDevices (DisconnectDevicesRequest) returns (DisconnectDevicesResponse);

  // Generate new devices
  rpc GenerateDevices (GenerateDeviceRequest) returns (GenerateDeviceResponse);

  // Update properties of existing device instance
  rpc UpdateDeviceProperties (UpdateDevicePropertiesRequest) returns (UpdateDevicePropertiesResponse);

}

service QuReedSimulation {

  // Starts the simulation
  rpc StartSimulation (StartSimulationRequest) returns (StartSimulationResponse);

  // Stops the simulation
  rpc StopSimulation (StopSimulationRequest) returns (StopSimulationResponse);

  // Simulation Logs
  rpc SimulationLogging (SimulationLoggingRequest) returns (SimulationLoggingResponse);

  // Perfomance Logs
  rpc PerfomanceLogging (PerformanceLoggingRequest) returns (PerformanceLoggingResponse);

  //Simulation Log Submision
  rpc SimulationLogSubmission (SubmitSimulationLogRequest) returns (SubmitSimulationLogResponse);

}

// Server Management Messages

message StatusRequest {
}

message StatusResponse {
  string status = 1;
  string message = 2;
}

message TerminateRequest {
}

message TerminateResponse {
  string status = 1;
  string message = 2;
}

// Venv Management Messages
message VenvConnectRequest {
  string venv_path = 1;  
}

message VenvConnectResponse {
  string status = 1;
  string message = 2;
}

message FreezeRequest {
}

message FreezeResponse {
  string status = 1;
  string packages = 2;
  string message = 3;
}

message InstallRequest {
  string package = 1;
}

message InstallResponse {
  string status = 1;
  string message = 2;
}

message UninstallRequest {
  string package = 1;
}

message UninstallResponse {
  string status = 1;
  string message = 2;
}

// QuReedManagement Messages
message GetIconRequest {
  string name = 1;
}

message GetIconResponse {
  string name = 1;
  string abs_path = 2;
}

message GetIconsRequest {
}

message GetIconsResponse {
  string status = 1;
  google.protobuf.Struct icons = 2;
  repeated GetIconResponse icons_list = 3;
  string message = 4;
}

message Signal {
  string module_class = 1;
  string name = 2;
}
message GetSignalsRequest {
}

message GetSignalsResponse {
  string status = 1;
  string message = 2;
  repeated Signal signals = 3;
}

message DeviceProperties {
  google.protobuf.Struct properties = 1;
}

message Connection {
  string device_one_uuid = 1;
  string device_two_uuid = 2;
  string device_one_port_label = 3;
  string device_two_port_label = 4;
  string signal = 5;
}

message Port {
  string label = 1;
  string signal_type = 2;
  string direction = 3;
}

message Device {
  string class_name = 1;
  string gui_name = 2;
  string module_class = 3;
  repeated Port ports = 4;
  string uuid = 5;
  DeviceProperties device_properties = 6;
  repeated float location = 7;
  repeated string gui_tags = 8;
  GetIconResponse icon = 9;
}

message GenerateDeviceRequest {
  Device device = 1;
}
message GenerateDeviceResponse {
  string status=1;
  string message=2;
}

message GetDevicesRequest {
}

message GetDevicesResponse {
  string status = 1;
  string message = 2;
  repeated Device devices = 3;
}

message GetDeviceRequest {
  string module_class = 1;
  string class_name = 2;
  string module_path = 3;
}

message GetDeviceResponse {
  Device device = 1;
  string message = 2;
  string status = 3;
}

message OpenBoardRequest {
  string board = 1;
}

message OpenBoardResponse {
  string status = 1;
  string message = 2;
  repeated Device devices = 3;
  repeated Connection connections = 4;
}

message SaveBoardRequest {
  string board = 1;
  repeated Device devices = 2;
  repeated Connection connections = 3;
}

message SaveBoardResponse {
  string status = 1;
  string message = 2;
}

message AddDeviceRequest {
  Device device = 1;
}

message AddDeviceResponse {
  string status = 1;
  string device_uuid = 2;
  string message = 3;
}

message RemoveDeviceRequest {
  string device_uuid = 1;
}

message RemoveDeviceResponse {
  string status = 1;
  string message = 2;
}

message ConnectDevicesRequest {
  string device_uuid_1 = 1;
  string device_port_1 = 2;
  string device_uuid_2 = 3;
  string device_port_2 = 4;
}

message ConnectDevicesResponse {
  string status = 1;
  string message = 2;
}

message DisconnectDevicesRequest {
  string device_uuid_1 = 1;
  string device_port_1 = 2;
  string device_uuid_2 = 3;
  string device_port_2 = 4;
}

message DisconnectDevicesResponse {
  string status = 1;
  string message = 2;
}

message UpdateDevicePropertiesRequest {
  Device device = 1;
}

message UpdateDevicePropertiesResponse {
  string status = 1;
  string message = 2;
}

// ---------------------
// Simulation Managmenet
// ---------------------

message StartSimulationRequest {
  string scheme_path = 1;
}

message StartSimulationResponse {
  string status = 1;
  string message = 2;
}

message StopSimulationRequest {
}

message StopSimulationResponse {
  string status = 1;
  string message = 2;
}

message SimulationLoggingRequest {
}

message SimulationLog {
  float timestamp = 1;
  float simulation_timestamp = 2;
  string log_type = 3;
  string device_name = 4;
  string message = 5;
  string error = 6;
}

message SimulationLoggingResponse {
  string status = 1;
  string message = 2;
  SimulationLog log = 3;
}

message PerformanceLoggingRequest {
}

message PerformanceLog {
  float used_ram = 1;
  float available_ram = 2;
  float used_cpu = 3;
}

message PerformanceLoggingResponse {
  string status = 1;
  string message = 2;
  PerformanceLog log = 3;
}

message SubmitSimulationLogRequest {
  SimulationLog log = 1;
}

message SubmitSimulationLogResponse {}