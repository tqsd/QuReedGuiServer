# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import qureed_project_server.server_pb2 as server__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in server_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ServerManagementStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Status = channel.unary_unary(
                '/qureed_project_server.ServerManagement/Status',
                request_serializer=server__pb2.StatusRequest.SerializeToString,
                response_deserializer=server__pb2.StatusResponse.FromString,
                _registered_method=True)
        self.Terminate = channel.unary_unary(
                '/qureed_project_server.ServerManagement/Terminate',
                request_serializer=server__pb2.TerminateRequest.SerializeToString,
                response_deserializer=server__pb2.TerminateResponse.FromString,
                _registered_method=True)


class ServerManagementServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Status(self, request, context):
        """Server Status
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Terminate(self, request, context):
        """Server Terminate
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServerManagementServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Status': grpc.unary_unary_rpc_method_handler(
                    servicer.Status,
                    request_deserializer=server__pb2.StatusRequest.FromString,
                    response_serializer=server__pb2.StatusResponse.SerializeToString,
            ),
            'Terminate': grpc.unary_unary_rpc_method_handler(
                    servicer.Terminate,
                    request_deserializer=server__pb2.TerminateRequest.FromString,
                    response_serializer=server__pb2.TerminateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'qureed_project_server.ServerManagement', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('qureed_project_server.ServerManagement', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ServerManagement(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qureed_project_server.ServerManagement/Status',
            server__pb2.StatusRequest.SerializeToString,
            server__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Terminate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qureed_project_server.ServerManagement/Terminate',
            server__pb2.TerminateRequest.SerializeToString,
            server__pb2.TerminateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class VenvManagementStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Connect = channel.unary_unary(
                '/qureed_project_server.VenvManagement/Connect',
                request_serializer=server__pb2.VenvConnectRequest.SerializeToString,
                response_deserializer=server__pb2.VenvConnectResponse.FromString,
                _registered_method=True)
        self.Freeze = channel.unary_unary(
                '/qureed_project_server.VenvManagement/Freeze',
                request_serializer=server__pb2.FreezeRequest.SerializeToString,
                response_deserializer=server__pb2.FreezeResponse.FromString,
                _registered_method=True)
        self.Install = channel.unary_unary(
                '/qureed_project_server.VenvManagement/Install',
                request_serializer=server__pb2.InstallRequest.SerializeToString,
                response_deserializer=server__pb2.InstallResponse.FromString,
                _registered_method=True)
        self.Uninstall = channel.unary_unary(
                '/qureed_project_server.VenvManagement/Uninstall',
                request_serializer=server__pb2.UninstallRequest.SerializeToString,
                response_deserializer=server__pb2.UninstallResponse.FromString,
                _registered_method=True)


class VenvManagementServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Connect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Freeze(self, request, context):
        """Freeze
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Install(self, request, context):
        """Install
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Uninstall(self, request, context):
        """Uninstall
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VenvManagementServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Connect': grpc.unary_unary_rpc_method_handler(
                    servicer.Connect,
                    request_deserializer=server__pb2.VenvConnectRequest.FromString,
                    response_serializer=server__pb2.VenvConnectResponse.SerializeToString,
            ),
            'Freeze': grpc.unary_unary_rpc_method_handler(
                    servicer.Freeze,
                    request_deserializer=server__pb2.FreezeRequest.FromString,
                    response_serializer=server__pb2.FreezeResponse.SerializeToString,
            ),
            'Install': grpc.unary_unary_rpc_method_handler(
                    servicer.Install,
                    request_deserializer=server__pb2.InstallRequest.FromString,
                    response_serializer=server__pb2.InstallResponse.SerializeToString,
            ),
            'Uninstall': grpc.unary_unary_rpc_method_handler(
                    servicer.Uninstall,
                    request_deserializer=server__pb2.UninstallRequest.FromString,
                    response_serializer=server__pb2.UninstallResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'qureed_project_server.VenvManagement', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('qureed_project_server.VenvManagement', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class VenvManagement(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Connect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qureed_project_server.VenvManagement/Connect',
            server__pb2.VenvConnectRequest.SerializeToString,
            server__pb2.VenvConnectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Freeze(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qureed_project_server.VenvManagement/Freeze',
            server__pb2.FreezeRequest.SerializeToString,
            server__pb2.FreezeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Install(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qureed_project_server.VenvManagement/Install',
            server__pb2.InstallRequest.SerializeToString,
            server__pb2.InstallResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Uninstall(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qureed_project_server.VenvManagement/Uninstall',
            server__pb2.UninstallRequest.SerializeToString,
            server__pb2.UninstallResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class QuReedManagementStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetIcons = channel.unary_unary(
                '/qureed_project_server.QuReedManagement/GetIcons',
                request_serializer=server__pb2.GetIconsRequest.SerializeToString,
                response_deserializer=server__pb2.GetIconsResponse.FromString,
                _registered_method=True)
        self.GetIcon = channel.unary_unary(
                '/qureed_project_server.QuReedManagement/GetIcon',
                request_serializer=server__pb2.GetIconRequest.SerializeToString,
                response_deserializer=server__pb2.GetIconResponse.FromString,
                _registered_method=True)
        self.GetDevices = channel.unary_unary(
                '/qureed_project_server.QuReedManagement/GetDevices',
                request_serializer=server__pb2.GetDevicesRequest.SerializeToString,
                response_deserializer=server__pb2.GetDevicesResponse.FromString,
                _registered_method=True)
        self.GetDevice = channel.unary_unary(
                '/qureed_project_server.QuReedManagement/GetDevice',
                request_serializer=server__pb2.GetDeviceRequest.SerializeToString,
                response_deserializer=server__pb2.GetDeviceResponse.FromString,
                _registered_method=True)
        self.GetSignals = channel.unary_unary(
                '/qureed_project_server.QuReedManagement/GetSignals',
                request_serializer=server__pb2.GetSignalsRequest.SerializeToString,
                response_deserializer=server__pb2.GetSignalsResponse.FromString,
                _registered_method=True)
        self.OpenBoard = channel.unary_unary(
                '/qureed_project_server.QuReedManagement/OpenBoard',
                request_serializer=server__pb2.OpenBoardRequest.SerializeToString,
                response_deserializer=server__pb2.OpenBoardResponse.FromString,
                _registered_method=True)
        self.SaveBoard = channel.unary_unary(
                '/qureed_project_server.QuReedManagement/SaveBoard',
                request_serializer=server__pb2.SaveBoardRequest.SerializeToString,
                response_deserializer=server__pb2.SaveBoardResponse.FromString,
                _registered_method=True)
        self.AddDevice = channel.unary_unary(
                '/qureed_project_server.QuReedManagement/AddDevice',
                request_serializer=server__pb2.AddDeviceRequest.SerializeToString,
                response_deserializer=server__pb2.AddDeviceResponse.FromString,
                _registered_method=True)
        self.RemoveDevice = channel.unary_unary(
                '/qureed_project_server.QuReedManagement/RemoveDevice',
                request_serializer=server__pb2.RemoveDeviceRequest.SerializeToString,
                response_deserializer=server__pb2.RemoveDeviceResponse.FromString,
                _registered_method=True)
        self.ConnectDevices = channel.unary_unary(
                '/qureed_project_server.QuReedManagement/ConnectDevices',
                request_serializer=server__pb2.ConnectDevicesRequest.SerializeToString,
                response_deserializer=server__pb2.ConnectDevicesResponse.FromString,
                _registered_method=True)
        self.DisconnectDevices = channel.unary_unary(
                '/qureed_project_server.QuReedManagement/DisconnectDevices',
                request_serializer=server__pb2.DisconnectDevicesRequest.SerializeToString,
                response_deserializer=server__pb2.DisconnectDevicesResponse.FromString,
                _registered_method=True)
        self.GenerateDevices = channel.unary_unary(
                '/qureed_project_server.QuReedManagement/GenerateDevices',
                request_serializer=server__pb2.GenerateDeviceRequest.SerializeToString,
                response_deserializer=server__pb2.GenerateDeviceResponse.FromString,
                _registered_method=True)
        self.UpdateDeviceProperties = channel.unary_unary(
                '/qureed_project_server.QuReedManagement/UpdateDeviceProperties',
                request_serializer=server__pb2.UpdateDevicePropertiesRequest.SerializeToString,
                response_deserializer=server__pb2.UpdateDevicePropertiesResponse.FromString,
                _registered_method=True)


class QuReedManagementServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetIcons(self, request, context):
        """Get a list of all available icons
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIcon(self, request, context):
        """Get a single icon
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDevices(self, request, context):
        """Get a list of all implemented devices
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDevice(self, request, context):
        """Get a single Device (built-in or custom)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSignals(self, request, context):
        """Get all signals
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OpenBoard(self, request, context):
        """Request Opening a board
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SaveBoard(self, request, context):
        """Request the board to be saved
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddDevice(self, request, context):
        """Add Device to the currently opened board
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveDevice(self, request, context):
        """Remove Device from the currently opened board
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConnectDevices(self, request, context):
        """Create Connection between two devices
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisconnectDevices(self, request, context):
        """Disconnects the devices
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateDevices(self, request, context):
        """Generate new devices
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDeviceProperties(self, request, context):
        """Update properties of existing device instance
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QuReedManagementServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetIcons': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIcons,
                    request_deserializer=server__pb2.GetIconsRequest.FromString,
                    response_serializer=server__pb2.GetIconsResponse.SerializeToString,
            ),
            'GetIcon': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIcon,
                    request_deserializer=server__pb2.GetIconRequest.FromString,
                    response_serializer=server__pb2.GetIconResponse.SerializeToString,
            ),
            'GetDevices': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDevices,
                    request_deserializer=server__pb2.GetDevicesRequest.FromString,
                    response_serializer=server__pb2.GetDevicesResponse.SerializeToString,
            ),
            'GetDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDevice,
                    request_deserializer=server__pb2.GetDeviceRequest.FromString,
                    response_serializer=server__pb2.GetDeviceResponse.SerializeToString,
            ),
            'GetSignals': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSignals,
                    request_deserializer=server__pb2.GetSignalsRequest.FromString,
                    response_serializer=server__pb2.GetSignalsResponse.SerializeToString,
            ),
            'OpenBoard': grpc.unary_unary_rpc_method_handler(
                    servicer.OpenBoard,
                    request_deserializer=server__pb2.OpenBoardRequest.FromString,
                    response_serializer=server__pb2.OpenBoardResponse.SerializeToString,
            ),
            'SaveBoard': grpc.unary_unary_rpc_method_handler(
                    servicer.SaveBoard,
                    request_deserializer=server__pb2.SaveBoardRequest.FromString,
                    response_serializer=server__pb2.SaveBoardResponse.SerializeToString,
            ),
            'AddDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.AddDevice,
                    request_deserializer=server__pb2.AddDeviceRequest.FromString,
                    response_serializer=server__pb2.AddDeviceResponse.SerializeToString,
            ),
            'RemoveDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveDevice,
                    request_deserializer=server__pb2.RemoveDeviceRequest.FromString,
                    response_serializer=server__pb2.RemoveDeviceResponse.SerializeToString,
            ),
            'ConnectDevices': grpc.unary_unary_rpc_method_handler(
                    servicer.ConnectDevices,
                    request_deserializer=server__pb2.ConnectDevicesRequest.FromString,
                    response_serializer=server__pb2.ConnectDevicesResponse.SerializeToString,
            ),
            'DisconnectDevices': grpc.unary_unary_rpc_method_handler(
                    servicer.DisconnectDevices,
                    request_deserializer=server__pb2.DisconnectDevicesRequest.FromString,
                    response_serializer=server__pb2.DisconnectDevicesResponse.SerializeToString,
            ),
            'GenerateDevices': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateDevices,
                    request_deserializer=server__pb2.GenerateDeviceRequest.FromString,
                    response_serializer=server__pb2.GenerateDeviceResponse.SerializeToString,
            ),
            'UpdateDeviceProperties': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDeviceProperties,
                    request_deserializer=server__pb2.UpdateDevicePropertiesRequest.FromString,
                    response_serializer=server__pb2.UpdateDevicePropertiesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'qureed_project_server.QuReedManagement', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('qureed_project_server.QuReedManagement', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class QuReedManagement(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetIcons(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qureed_project_server.QuReedManagement/GetIcons',
            server__pb2.GetIconsRequest.SerializeToString,
            server__pb2.GetIconsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetIcon(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qureed_project_server.QuReedManagement/GetIcon',
            server__pb2.GetIconRequest.SerializeToString,
            server__pb2.GetIconResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDevices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qureed_project_server.QuReedManagement/GetDevices',
            server__pb2.GetDevicesRequest.SerializeToString,
            server__pb2.GetDevicesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qureed_project_server.QuReedManagement/GetDevice',
            server__pb2.GetDeviceRequest.SerializeToString,
            server__pb2.GetDeviceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSignals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qureed_project_server.QuReedManagement/GetSignals',
            server__pb2.GetSignalsRequest.SerializeToString,
            server__pb2.GetSignalsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OpenBoard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qureed_project_server.QuReedManagement/OpenBoard',
            server__pb2.OpenBoardRequest.SerializeToString,
            server__pb2.OpenBoardResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SaveBoard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qureed_project_server.QuReedManagement/SaveBoard',
            server__pb2.SaveBoardRequest.SerializeToString,
            server__pb2.SaveBoardResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qureed_project_server.QuReedManagement/AddDevice',
            server__pb2.AddDeviceRequest.SerializeToString,
            server__pb2.AddDeviceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qureed_project_server.QuReedManagement/RemoveDevice',
            server__pb2.RemoveDeviceRequest.SerializeToString,
            server__pb2.RemoveDeviceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConnectDevices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qureed_project_server.QuReedManagement/ConnectDevices',
            server__pb2.ConnectDevicesRequest.SerializeToString,
            server__pb2.ConnectDevicesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DisconnectDevices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qureed_project_server.QuReedManagement/DisconnectDevices',
            server__pb2.DisconnectDevicesRequest.SerializeToString,
            server__pb2.DisconnectDevicesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GenerateDevices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qureed_project_server.QuReedManagement/GenerateDevices',
            server__pb2.GenerateDeviceRequest.SerializeToString,
            server__pb2.GenerateDeviceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateDeviceProperties(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qureed_project_server.QuReedManagement/UpdateDeviceProperties',
            server__pb2.UpdateDevicePropertiesRequest.SerializeToString,
            server__pb2.UpdateDevicePropertiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
